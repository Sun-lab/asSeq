
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(biomaRt)
> library(AnnotationDbi)
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which, which.max, which.min

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: IRanges
Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

> 
> # -----------------------------------------------------------------
> # select all the transcripts per gene
> # -----------------------------------------------------------------
> 
> txdb = loadDb("gencode.v26.GRCh38.genes.sqlite")
Loading required package: GenomicFeatures
Loading required package: GenomeInfoDb
Loading required package: GenomicRanges
> 
> seqlevels(txdb)
 [1] "chr1"  "chr2"  "chr3"  "chr4"  "chr5"  "chr6"  "chr7"  "chr8"  "chr9" 
[10] "chr10" "chr11" "chr12" "chr13" "chr14" "chr15" "chr16" "chr17" "chr18"
[19] "chr19" "chr20" "chr21" "chr22" "chrX"  "chrY"  "chrM" 
> columns(txdb)
 [1] "CDSCHROM"   "CDSEND"     "CDSID"      "CDSNAME"    "CDSPHASE"  
 [6] "CDSSTART"   "CDSSTRAND"  "EXONCHROM"  "EXONEND"    "EXONID"    
[11] "EXONNAME"   "EXONRANK"   "EXONSTART"  "EXONSTRAND" "GENEID"    
[16] "TXCHROM"    "TXEND"      "TXID"       "TXNAME"     "TXSTART"   
[21] "TXSTRAND"   "TXTYPE"    
> keytypes(txdb)
[1] "CDSID"    "CDSNAME"  "EXONID"   "EXONNAME" "GENEID"   "TXID"     "TXNAME"  
> 
> cols   = c("TXCHROM", "TXSTRAND", "TXSTART", "TXEND")
> enids  = keys(txdb, keytype="GENEID")
> length(enids)
[1] 56200
> enids[1:5]
[1] "ENSG00000000003.14" "ENSG00000000005.5"  "ENSG00000000419.12"
[4] "ENSG00000000457.13" "ENSG00000000460.16"
> 
> ptm    = proc.time()
> annots = select(txdb, keys=enids, columns=cols, keytype="GENEID")
'select()' returned 1:1 mapping between keys and columns
> proc.time() - ptm
   user  system elapsed 
  0.721   0.020   0.741 
> 
> dim(annots)
[1] 56200     5
> head(annots)
              GENEID TXCHROM TXSTRAND   TXSTART     TXEND
1 ENSG00000000003.14    chrX        - 100627109 100639991
2  ENSG00000000005.5    chrX        + 100584802 100599885
3 ENSG00000000419.12   chr20        -  50934867  50958555
4 ENSG00000000457.13    chr1        - 169849631 169894267
5 ENSG00000000460.16    chr1        + 169662007 169854080
6 ENSG00000000938.12    chr1        -  27612064  27635277
> 
> table(annots$TXEND - annots$TXSTART > 0)

 TRUE 
56200 
> 
> length(unique(annots$GENEID))
[1] 56200
> 
> # -----------------------------------------------------------------
> # generate gene-level annotation
> # -----------------------------------------------------------------
> 
> chrs    = tapply(annots$TXCHROM, annots$GENEID, unique)
> strands = tapply(annots$TXSTRAND, annots$GENEID, unique)
> 
> is.list(chrs)
[1] FALSE
> is.list(strands)
[1] FALSE
> 
> head(chrs)
ENSG00000000003.14  ENSG00000000005.5 ENSG00000000419.12 ENSG00000000457.13 
            "chrX"             "chrX"            "chr20"             "chr1" 
ENSG00000000460.16 ENSG00000000938.12 
            "chr1"             "chr1" 
> head(strands)
ENSG00000000003.14  ENSG00000000005.5 ENSG00000000419.12 ENSG00000000457.13 
               "-"                "+"                "-"                "-" 
ENSG00000000460.16 ENSG00000000938.12 
               "+"                "-" 
> 
> starts = tapply(annots$TXSTART, annots$GENEID, min)
> ends   = tapply(annots$TXEND, annots$GENEID, max)
> 
> table(names(chrs) == names(strands))

 TRUE 
56200 
> table(names(chrs) == names(starts))

 TRUE 
56200 
> table(names(chrs) == names(ends))

 TRUE 
56200 
> 
> anno1 = data.frame(geneId = names(chrs), chr=chrs, strand=strands,
+   start=starts, end=ends, row.names=NULL, stringsAsFactors=FALSE)
> 
> dim(anno1)
[1] 56200     5
> head(anno1)
              geneId   chr strand     start       end
1 ENSG00000000003.14  chrX      - 100627109 100639991
2  ENSG00000000005.5  chrX      + 100584802 100599885
3 ENSG00000000419.12 chr20      -  50934867  50958555
4 ENSG00000000457.13  chr1      - 169849631 169894267
5 ENSG00000000460.16  chr1      + 169662007 169854080
6 ENSG00000000938.12  chr1      -  27612064  27635277
> 
> pdf("hist_gene_length.pdf", width=4, height=3)
> par(mar=c(5,4,1,1))
> hist(log10(anno1$end - anno1$start), xlab="log10(gene length)", main="")
> dev.off()
null device 
          1 
> 
> # -----------------------------------------------------------------
> # get more information from biomart
> # -----------------------------------------------------------------
> 
> enids = strsplit(anno1$geneId, split=".", fixed=TRUE)
> table(sapply(enids, length))

    2 
56200 
> enids = matrix(unlist(enids), byrow=TRUE, ncol=2)
> 
> dim(enids)
[1] 56200     2
> enids[1:5,]
     [,1]              [,2]
[1,] "ENSG00000000003" "14"
[2,] "ENSG00000000005" "5" 
[3,] "ENSG00000000419" "12"
[4,] "ENSG00000000457" "13"
[5,] "ENSG00000000460" "16"
> 
> length(unique(enids[,1]))
[1] 56156
> 
> enids = enids[,1]
> enids[1:5]
[1] "ENSG00000000003" "ENSG00000000005" "ENSG00000000419" "ENSG00000000457"
[5] "ENSG00000000460"
> 
> anno1$ensembl_gene_id = enids
> 
> mart = useMart(biomart="ENSEMBL_MART_ENSEMBL", dataset="hsapiens_gene_ensembl")
> mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
> 
> ptm   = proc.time()
> anno2 = getBM(c("hgnc_symbol","description","chromosome_name","band", 
+                 "strand","start_position","end_position","ensembl_gene_id"),
+   filters="ensembl_gene_id", values=enids, mart)
> proc.time() - ptm
   user  system elapsed 
  1.956   0.181 275.833 
> 
> dim(anno2)
[1] 55662     8
> anno2[1:2,]
  hgnc_symbol                                       description chromosome_name
1      TSPAN6 tetraspanin 6 [Source:HGNC Symbol;Acc:HGNC:11858]               X
2        TNMD   tenomodulin [Source:HGNC Symbol;Acc:HGNC:17757]               X
   band strand start_position end_position ensembl_gene_id
1 q22.1     -1      100627108    100639991 ENSG00000000003
2 q22.1      1      100584936    100599885 ENSG00000000005
> 
> dim(anno1)
[1] 56200     6
> anno1[1:2,]
              geneId  chr strand     start       end ensembl_gene_id
1 ENSG00000000003.14 chrX      - 100627109 100639991 ENSG00000000003
2  ENSG00000000005.5 chrX      + 100584802 100599885 ENSG00000000005
> length(unique(anno1$ensembl_gene_id))
[1] 56156
> 
> table(anno2$chromosome_name)

   1   10   11   12   13   14   15   16   17   18   19    2   20   21   22    3 
5005 2144 3108 2807 1258 2120 2012 2353 2816 1136 2731 3864 1330  808 1247 2930 
   4    5    6    7    8    9   MT    X    Y 
2457 2775 2770 2748 2255 2144   37 2302  505 
> 
> tbls = table(anno2$ensembl_gene_id)
> tbls = sort(tbls, decreasing=TRUE)
> 
> tbls[1:15]

ENSG00000187510 ENSG00000230417 ENSG00000276085 ENSG00000000003 ENSG00000000005 
              2               2               2               1               1 
ENSG00000000419 ENSG00000000457 ENSG00000000460 ENSG00000000938 ENSG00000000971 
              1               1               1               1               1 
ENSG00000001036 ENSG00000001084 ENSG00000001167 ENSG00000001460 ENSG00000001461 
              1               1               1               1               1 
> 
> anno2[anno2$ensembl_gene_id=="ENSG00000187510",]
      hgnc_symbol
16401    C12orf74
16402     PLEKHG7
                                                                                  description
16401 pleckstrin homology and RhoGEF domain containing G7 [Source:HGNC Symbol;Acc:HGNC:33829]
16402 pleckstrin homology and RhoGEF domain containing G7 [Source:HGNC Symbol;Acc:HGNC:33829]
      chromosome_name band strand start_position end_position ensembl_gene_id
16401              12  q22      1       92702843     92772455 ENSG00000187510
16402              12  q22      1       92702843     92772455 ENSG00000187510
> anno2[anno2$ensembl_gene_id=="ENSG00000230417",]
      hgnc_symbol
29167   LINC00595
29168   LINC00856
                                                                         description
29167 long intergenic non-protein coding RNA 595 [Source:HGNC Symbol;Acc:HGNC:31430]
29168 long intergenic non-protein coding RNA 595 [Source:HGNC Symbol;Acc:HGNC:31430]
      chromosome_name  band strand start_position end_position ensembl_gene_id
29167              10 q22.3      1       78179185     78551355 ENSG00000230417
29168              10 q22.3      1       78179185     78551355 ENSG00000230417
> anno2[anno2$ensembl_gene_id=="ENSG00000276085",]
      hgnc_symbol
52249      CCL3L1
52250      CCL3L3
                                                                  description
52249 C-C motif chemokine ligand 3 like 3 [Source:HGNC Symbol;Acc:HGNC:30554]
52250 C-C motif chemokine ligand 3 like 3 [Source:HGNC Symbol;Acc:HGNC:30554]
      chromosome_name band strand start_position end_position ensembl_gene_id
52249              17  q12     -1       36194869     36196758 ENSG00000276085
52250              17  q12     -1       36194869     36196758 ENSG00000276085
> 
> # -----------------------------------------------------------------
> # obtain merged annotation
> # -----------------------------------------------------------------
> 
> anno3 = merge(anno1, anno2, by="ensembl_gene_id", all=TRUE)
> 
> dim(anno3)
[1] 56203    13
> anno3[1:2,]
  ensembl_gene_id             geneId  chr strand.x     start       end
1 ENSG00000000003 ENSG00000000003.14 chrX        - 100627109 100639991
2 ENSG00000000005  ENSG00000000005.5 chrX        + 100584802 100599885
  hgnc_symbol                                       description chromosome_name
1      TSPAN6 tetraspanin 6 [Source:HGNC Symbol;Acc:HGNC:11858]               X
2        TNMD   tenomodulin [Source:HGNC Symbol;Acc:HGNC:17757]               X
   band strand.y start_position end_position
1 q22.1       -1      100627108    100639991
2 q22.1        1      100584936    100599885
> 
> table(anno3$strand.x, anno3$strand.y, useNA="ifany")
   
       -1     1  <NA>
  - 27562     3   223
  +     1 28140   274
> table(anno3$chr == paste("chr", anno3$chromosome_name, sep=""))

FALSE  TRUE 
  578 55625 
> 
> ww1 = which(anno3$chr != paste("chr", anno3$chromosome_name, sep=""))
> table(anno3[ww1,"chr"], anno3[ww1,"chromosome_name"], useNA="ifany")
       
        MT  X <NA>
  chr1   0  0   51
  chr10  0  0   12
  chr11  0  0   24
  chr12  0  0   26
  chr13  0  0   12
  chr14  0  0    9
  chr15  0  0   37
  chr16  0  0   29
  chr17  0  0   29
  chr18  0  0    6
  chr19  0  0   15
  chr2   0  0   22
  chr20  0  0    8
  chr21  0  0   10
  chr22  0  0   10
  chr3   0  0   15
  chr4   0  0   19
  chr5   0  0   24
  chr6   0  0   30
  chr7   0  0   15
  chr8   0  0   40
  chr9   0  0   30
  chrM  37  0    0
  chrX   0  0   13
  chrY   0 44   11
> 
> summary(anno3$start_position - anno3$start)
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's 
 -970669        0        0    16844        0 98813532      497 
> summary(anno3$end_position - anno3$end)
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's 
-1057788        0        0    19639        0 98813527      497 
> 
> fun1 <- function(v){paste(unique(v), collapse=";")}
> 
> hgnc_symbol = tapply(anno3$hgnc_symbol, anno3$geneId, fun1)
> description = tapply(anno3$description, anno3$geneId, fun1)
> 
> table(names(hgnc_symbol) == anno1$geneId)

 TRUE 
56200 
> table(names(description) == anno1$geneId)

 TRUE 
56200 
> 
> anno1$hgnc_symbol = hgnc_symbol
> anno1$description = description
> 
> dim(anno1)
[1] 56200     8
> anno1[1:2,]
              geneId  chr strand     start       end ensembl_gene_id
1 ENSG00000000003.14 chrX      - 100627109 100639991 ENSG00000000003
2  ENSG00000000005.5 chrX      + 100584802 100599885 ENSG00000000005
  hgnc_symbol                                       description
1      TSPAN6 tetraspanin 6 [Source:HGNC Symbol;Acc:HGNC:11858]
2        TNMD   tenomodulin [Source:HGNC Symbol;Acc:HGNC:17757]
> 
> write.table(anno1, file = "gencode.v26.GRCh38.genes_gene_level_anno.txt", 
+             append = FALSE, quote = FALSE, sep = "\t", 
+             row.names = FALSE, col.names = TRUE)
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)
Ncells  6922506 369.8   12448607 664.9         NA 12448607 664.9
Vcells 15148548 115.6   25879652 197.5      32768 21499685 164.1
> 
> sessionInfo()
R version 3.6.2 (2019-12-12)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Catalina 10.15.3

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
[1] GenomicFeatures_1.36.4 GenomicRanges_1.36.1   GenomeInfoDb_1.20.0   
[4] AnnotationDbi_1.46.1   IRanges_2.18.3         S4Vectors_0.22.1      
[7] Biobase_2.44.0         BiocGenerics_0.30.0    biomaRt_2.40.5        

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3                  compiler_3.6.2             
 [3] XVector_0.24.0              prettyunits_1.1.1          
 [5] bitops_1.0-6                tools_3.6.2                
 [7] progress_1.2.2              zlibbioc_1.30.0            
 [9] digest_0.6.23               bit_1.1-15.2               
[11] lattice_0.20-38             RSQLite_2.2.0              
[13] memoise_1.1.0               pkgconfig_2.0.3            
[15] rlang_0.4.4                 Matrix_1.2-18              
[17] DelayedArray_0.10.0         DBI_1.1.0                  
[19] curl_4.3                    GenomeInfoDbData_1.2.1     
[21] rtracklayer_1.44.4          stringr_1.4.0              
[23] httr_1.4.1                  Biostrings_2.52.0          
[25] vctrs_0.2.2                 hms_0.5.3                  
[27] grid_3.6.2                  bit64_0.9-7                
[29] R6_2.4.1                    BiocParallel_1.18.1        
[31] XML_3.99-0.3                blob_1.2.1                 
[33] magrittr_1.5                matrixStats_0.55.0         
[35] GenomicAlignments_1.20.1    Rsamtools_2.0.3            
[37] SummarizedExperiment_1.14.1 stringi_1.4.5              
[39] RCurl_1.98-1.1              crayon_1.3.4               
> 
> q(save="no")
> proc.time()
   user  system elapsed 
 17.969   0.531 298.307 
