
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ## when writing data into text file, it may use scientific format
> ## when you read it into c, and using atoi. it will make mistakes
> ## say 97000000 is written as 9.7e+07, and c think it is 9
> ## options("scipen") can control write out behavior
> 
> options(scipen=20)
> 
> # --------------------------------------------------------- 
> # read in data
> # ---------------------------------------------------------
> 
> setwd("~/research/data/human/")
> 
> ff  = "Homo_sapiens.GRCh37.66.nonoverlap.exon.gtf"
> date()
[1] "Fri Apr 27 21:24:58 2012"
> inf = read.table(ff, sep="\t", as.is=TRUE, header=FALSE, quote="")
> date()
[1] "Fri Apr 27 21:25:35 2012"
> 
> names(inf) = c("chr", "source", "feature", "start", "end", 
+ "score", "strand", "frame", "anno")
> 
> dim(inf)
[1] 551463      9
> inf[1:2,]
   chr                             source feature start   end score strand
1 chr1               processed_transcript    exon 11869 11871     .      +
2 chr1 transcribed_unprocessed_pseudogene    exon 11872 12009     .      +
  frame
1     .
2     .
                                                                                                                                                                                                       anno
1                                                         gene_id "ENSG00000223972"; transcript_id "ENST00000456328"; gene_name "DDX11L1"; transcript_name "DDX11L1-002"; exon_id "1"; clustId "chr1_2279";
2 gene_id "ENSG00000223972"; transcript_id "ENST00000456328:ENST00000515242:ENST00000518655"; gene_name "DDX11L1"; transcript_name "DDX11L1-002:DDX11L1-201:DDX11L1-202"; exon_id "2"; clustId "chr1_2279";
> 
> table(inf$chr)

 chr1 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19  chr2 chr20 
55143 20922 36126 35050  9045 21231 23187 27609 21836  4991 20332 42095 12158 
chr21 chr22  chr3  chr4  chr5  chr6  chr7  chr8  chr9  chrX  chrY 
 6091 13450 34660 22734 26753 25576 28791 22537 20605 18051  2490 
> table(inf$strand)

     +    +:-      -    -:+ 
278705      8 272746      4 
> 
> summary(inf$end - inf$start)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      0      45     100     203     179   24670 
> 
> table(inf$end - inf$start == 0)

 FALSE   TRUE 
548658   2805 
> 
> ## for bed format, the first base in a chromosome is numbered 0.
> ## while in gtf format, the first base in a chromosome is numbered 1.
> 
> inf$start = inf$start - 1
> 
> # --------------------------------------------------------- 
> # obtain clust_id
> # --------------------------------------------------------- 
> 
> reg1   = regexpr('clustId\\s"(\\S+)";', inf$anno, perl=TRUE)
> len1   = attributes(reg1)[[1]]
> nadd   = length(unlist(strsplit("clustId", split=""))) + 2
> clustId = substr(inf$anno, reg1+nadd, reg1+len1-3)
> 
> # --------------------------------------------------------- 
> # obtain gene_id
> # --------------------------------------------------------- 
> 
> reg1   = regexpr('gene_id\\s"(\\S+)";', inf$anno, perl=TRUE)
> len1   = attributes(reg1)[[1]]
> nadd   = length(unlist(strsplit("gene_id", split=""))) + 2
> geneId = substr(inf$anno, reg1+nadd, reg1+len1-3)
> 
> # --------------------------------------------------------- 
> # obtain exon_id
> # --------------------------------------------------------- 
> 
> reg1   = regexpr('exon_id\\s"(\\S+)";', inf$anno, perl=TRUE)
> len1   = attributes(reg1)[[1]]
> nadd   = length(unlist(strsplit("exon_id", split=""))) + 2
> exonId = substr(inf$anno, reg1+nadd, reg1+len1-3)
> 
> # --------------------------------------------------------- 
> # construct bed file
> # --------------------------------------------------------- 
> 
> names = paste(clustId, geneId, exonId, sep="|")
> score = rep("666", length(names))
> bed   = cbind(inf$chr, inf$start, inf$end, names, score, inf$strand)
> 
> # ---------------------------------------------------------
> # write out results
> # ---------------------------------------------------------
> 
> setwd("~/research/data/human/")
> 
> write.table(bed, col.names = FALSE, append = FALSE, 
+   file = "Homo_sapiens.GRCh37.66.nonoverlap.exon.bed", 
+   quote = FALSE, sep = "\t", row.names = FALSE)
> 
> 
> proc.time()
   user  system elapsed 
 44.051   0.860  44.982 
